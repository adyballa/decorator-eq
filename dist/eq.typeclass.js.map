{"version":3,"file":"eq.typeclass.js","sourceRoot":"","sources":["../eq.typeclass.ts"],"names":[],"mappings":"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","sourcesContent":["export interface IEq {\r\n    [name:string]:any;\r\n    eq(a:IEq):boolean,\r\n    eq(a:IEq, config:IEqConfig):boolean;\r\n    neq(a:IEq):boolean\r\n    neq(a:IEq, config:IEqConfig):boolean;\r\n}\r\n\r\nexport type TFieldValue = number | string | IEq;\r\n\r\nexport interface IFieldProperty {\r\n    fuzzy?:boolean\r\n}\r\n\r\nexport function isEq(object:any):object is IEq {\r\n    return (typeof object === 'object' && 'eq' in object && 'neq' in object);\r\n}\r\n\r\nexport interface IField {\r\n    name:string;\r\n    eq:(a:IEq, b:IEq)=>boolean;\r\n    neq:(a:IEq, b:IEq)=>boolean;\r\n    value:(object:IEq)=>TFieldValue;\r\n}\r\n\r\nexport class EqField implements IField {\r\n\r\n    constructor(public name:string) {\r\n    }\r\n\r\n    public eq(a:IEq, b:IEq):boolean {\r\n        let vals = [this.value(a), this.value(b)];\r\n        return (vals[0] === null || vals[1] === null) ? null :\r\n            (isEq(vals[0])) ? (<IEq> vals[0]).eq(<IEq> vals[1]) : (vals[0] === vals[1]);\r\n    }\r\n\r\n    public neq(a:IEq, b:IEq):boolean {\r\n        let val = this.eq(a, b);\r\n        return (val === null) ? null : !val;\r\n    }\r\n\r\n    public value(object:IEq):TFieldValue {\r\n        return object[this.name];\r\n    }\r\n}\r\n\r\nexport class FuzzyEqField extends EqField {\r\n\r\n    public eq(a:IEq, b:IEq):boolean {\r\n        let vals = [this.value(a), this.value(b)];\r\n        if (vals[0] === null || vals[1] === null) {\r\n            return null;\r\n        } else {\r\n            if (isEq(vals[0])) {\r\n                return (<IEq> vals[0]).eq(<IEq> vals[1])\r\n            } else {\r\n                if (vals[0] === vals[1]) {\r\n                    return true;\r\n                } else {\r\n                    return ((typeof vals[0] === \"string\") && ((<string> vals[1]).indexOf(<string> vals[0]) > -1)) ? null : false;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport interface IEqConfig {\r\n    fields:Array<IField>,\r\n}\r\n\r\nexport class EqConfig implements IEqConfig {\r\n\r\n    protected _fields:Array<IField> = [];\r\n\r\n    public get fields():Array<IField> {\r\n        return this._fields;\r\n    }\r\n\r\n    public set fields(fields:Array<IField>) {\r\n        this._fields = fields;\r\n    }\r\n\r\n    public static setCardinalityOfField(name:string, fields:Array<IField>, newIndex = 0) {\r\n        let oldKey = fields.findIndex((field:IField) => {\r\n            return (field.name === name);\r\n        });\r\n        fields.splice(newIndex, 0, fields.splice(oldKey, 1)[0]);\r\n    }\r\n}\r\n\r\nexport interface IEqProps {\r\n    config?:IEqConfig;\r\n}\r\n\r\nexport class Eq {\r\n\r\n    protected static _eq:{fields:Array<EqField>} = {fields: []};\r\n\r\n    protected static _impl(method:string) {\r\n        return function (a:any, config?:IEqConfig) {\r\n            let res:boolean = null;\r\n            if (!config) {\r\n                throw new Error(\"Method \" + method + \" cannot be run without config.\");\r\n            }\r\n            for (let field of config.fields) {\r\n                let val:boolean = (method === \"eq\") ? field.eq(this, a) : field.neq(this, a);\r\n                if (val !== null) {\r\n                    if (!val) return false;\r\n                    res = true;\r\n                }\r\n            }\r\n            return res;\r\n        }\r\n    }\r\n\r\n    static implementFields(config?:IEqConfig, fields:Array<EqField> = []) {\r\n        let _f:Array<EqField> = [];\r\n        for (let i = 0, j = fields.length; i < j; i++) {\r\n            if (fields[i] !== undefined) {\r\n                _f.push(fields[i]);\r\n            }\r\n        }\r\n        if (config) {\r\n            config.fields = _f;\r\n        }\r\n    }\r\n\r\n    static field(props:IFieldProperty) {\r\n        return function (target:Object, propertyKey:string) {\r\n            Eq._eq.fields.push((\"fuzzy\" in props && props.fuzzy) ? new FuzzyEqField(propertyKey) : new EqField(propertyKey));\r\n        }\r\n    }\r\n\r\n    static implement(props?:IEqProps) {\r\n        return (target:Function) => {\r\n            Eq.implementFields((props) ? props.config : null, Eq._eq.fields);\r\n            Eq._eq.fields = [];\r\n            target.prototype.eq = this._impl(\"eq\");\r\n            target.prototype.neq = this._impl(\"neq\");\r\n        }\r\n    }\r\n\r\n    static eq(cs:IEq[], ref:IEq, config:IEqConfig):IEq[] {\r\n        return cs.filter((a:IEq) => {\r\n            return ref.eq(a, config);\r\n        });\r\n    }\r\n\r\n    static fuzzyEq(cs:IEq[], ref:IEq, config:IEqConfig):IEq[] {\r\n        return cs.filter((a:IEq) => {\r\n            return (ref.eq(a, config) !== false);\r\n        });\r\n    }\r\n\r\n    static neq(cs:IEq[], ref:IEq, config:IEqConfig):IEq[] {\r\n        return cs.filter((a:IEq) => {\r\n            return (ref.eq(a, config) === false);\r\n        });\r\n    }\r\n}\r\n\r\nexport class EqOr {\r\n\r\n    static fuzzyEq(cs:IEq[], refs:IEq[], config:IEqConfig):IEq[] {\r\n        return cs.filter((a:IEq) => {\r\n            return (refs.filter((ref:IEq) => {\r\n                return (ref.eq(a, config) !== false);\r\n            }).length > 0);\r\n        });\r\n    }\r\n\r\n}"]}